[database] url = "postgresql://kv_user:password@localhost/omnipaxos_kv"

net stop postgresql-x64-17
net start postgresql-x64-17

数据库密码：020228
用户kv_user密码：password

psql -U kv_user -d omnipaxos_kv
psql -U postgres -d omnipaxos_kv

SELECT * FROM kv_table;
DROP TABLE kv_table;

\l: 查看数据库。
\du: 查看用户。
\dt: 查看表格

./run-local-cluster.sh
./run-local-client.sh

单独运行一个client：
export RUST_LOG=debug
export CONFIG_FILE=./client-1-config.toml
cargo run --bin client

-------------------用docker---------------------
docker compose build
docker compose up

docker exec -it postgres bash
进入容器后
psql -U kv_user -d omnipaxos_kv

-------------------GCP-------------------------

查看gcloud项目
gcloud projects list
gcloud projects delete xxx
project ID:        omnipaxos-2025-yilai
billing account:   012D77-DC8637-C464A0


获得密钥：
gcloud compute os-login ssh-keys add --key-file=%USERPROFILE%\.ssh\google_compute_engine.pub
gcloud compute os-login describe-profile --format="yaml(posixAccounts)"
用yilai创建了一个什么passkey然后获得了：
uid: '2060648700'
username: chenyilai2022_gmail_com

推送镜像
./push-server-image.sh
./push-client-image.sh

uv run benchmarks.py
uv run graph_experiment.py


手动进入服务器
gcloud compute ssh user-2060648700-cluster-1-server-1 --zone=us-west2-a --tunnel-through-iap


---------------------Vir----------------------
cd /media/sf_D_DRIVE/ID2203\ Distributed\ Advcance/Project/omnipaxos-kv/benchmarks
source ~/omnipaxos_env/bin/activate

uv run --active benchmarks.py


sudo docker-compose build


gcloud compute ssh user-2060648700-cluster-1-server-1 --zone us-west2-a
gcloud compute ssh user-2060648700-cluster-1-client-1 --zone us-west2-a


gcloud compute firewall-rules list --filter="name~'omnipaxos'" --format=json
gcloud compute firewall-rules create allow-omnipaxos \
    --allow tcp:8000 \
    --direction INGRESS \
    --target-tags omnipaxos-server \
    --source-ranges 0.0.0.0/0 \
    --description "Allow Omnipaxos communication on port 8000"
nano ~/client-1-config.toml
server_address = "35.235.93.101:8000"
docker ps -a | grep omnipaxos