[database] url = "postgresql://kv_user:password@localhost/omnipaxos_kv"

net stop postgresql-x64-17
net start postgresql-x64-17

数据库密码：020228
用户kv_user密码：password

psql -U kv_user -d omnipaxos_kv
psql -U postgres -d omnipaxos_kv

SELECT * FROM kv_table;
DROP TABLE kv_table;

\l: 查看数据库。
\du: 查看用户。
\dt: 查看表格

./run-local-cluster.sh
./run-local-client.sh

单独运行一个client：
export RUST_LOG=debug
export CONFIG_FILE=./client-1-config.toml
cargo run --bin client

-------------------用docker---------------------
docker compose build
docker compose up

docker exec -it postgres bash
进入容器后
psql -U kv_user -d omnipaxos_kv

-------------------GCP-------------------------

查看gcloud项目
gcloud projects list
gcloud projects delete xxx
project ID:        omnipaxos-2025-yilai
billing account:   012D77-DC8637-C464A0


获得密钥：
gcloud compute os-login ssh-keys add --key-file=%USERPROFILE%\.ssh\google_compute_engine.pub
gcloud compute os-login describe-profile --format="yaml(posixAccounts)"
用yilai创建了一个什么passkey然后获得了：
uid: '2060648700'
username: chenyilai2022_gmail_com

推送镜像
./push-server-image.sh
./push-client-image.sh

uv run benchmarks.py
uv run graph_experiment.py


手动进入服务器数据库
docker exec -it postgres bash
psql -U kv_user omnipaxos_kv


---------------------Vir----------------------
cd /media/sf_D_DRIVE/ID2203\ Distributed\ Advcance/Project/omnipaxos-kv/benchmarks
source ~/omnipaxos_env/bin/activate

uv run --active benchmarks.py
监听server
docker events --filter 'container=server'
gcloud compute ssh user-2060648700-cluster-1-server-
gcloud compute ssh user-2060648700-cluster-1-client-

docker rm -f server

检查容器是否在监听 8000 端口（关键）：
docker exec -it server bash
apt update && apt install -y net-tools
netstat -tulnp | grep 8000

docker run -d \
  --restart=always \
  --name server \
  -p 8000:8000 \
  --env RUST_LOG="debug" \
  --env DATABASE_URL="postgres://kv_user:password@postgres:5432/omnipaxos_kv" \
  --env SERVER_CONFIG_FILE="/server-config.toml" \
  --env CLUSTER_CONFIG_FILE="/cluster-config.toml" \
  --link postgres:postgres \
  -v ~/server-config.toml:/server-config.toml \
  -v ~/cluster-config.toml:/cluster-config.toml \
  gcr.io/omnipaxos-2025-yilai/2060648700_omnipaxos_server \
  /usr/local/bin/server

docker run -d \
  --restart=always \
  --name server \
  -p 8000:8000 \
  --env RUST_LOG="debug" \
  --env DATABASE_URL="postgres://kv_user:password@35.235.93.101:5432/omnipaxos_kv" \
  --env SERVER_CONFIG_FILE="/server-config.toml" \
  --env CLUSTER_CONFIG_FILE="/cluster-config.toml" \
  -v ~/server-config.toml:/server-config.toml \
  -v ~/cluster-config.toml:/cluster-config.toml \
  gcr.io/omnipaxos-2025-yilai/2060648700_omnipaxos_server \
  /usr/local/bin/server

docker logs postgres

dos2unix run_server.sh 转换格式
云端改变之后要执行一下 bash ~/run_server.sh


docker exec -it server cat /cluster-config.toml
docker exec -it server cat /cluster-server.toml